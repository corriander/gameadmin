CREATE DATABASE gameadmin;

CREATE SCHEMA fraps;

CREATE TABLE fraps.dataset (
    id serial PRIMARY KEY NOT NULL,
    filepath text UNIQUE NOT NULL
);
-- ALTER TABLE fraps.dataset ADD CONSTRAINT dataset_filepath_key UNIQUE (filepath);

DROP TABLE IF EXISTS fraps.frametimes;
CREATE TABLE fraps.frametimes (
    dataset_id bigint REFERENCES fraps.dataset (id),
    frame int NOT NULL,
    ms float NOT NULL,
    UNIQUE (dataset_id, frame)
);

CREATE OR REPLACE FUNCTION fraps.import_frametimes (p_path varchar(260))
RETURNS void
AS
$DEF$

BEGIN
    
    DROP TABLE IF EXISTS pg_temp._import_frametimes;
    CREATE TEMPORARY TABLE pg_temp._import_frametimes (frame int, ms float);
    
    EXECUTE format(
                $$
                COPY pg_temp._import_frametimes 
                FROM '%s' DELIMITER ',' CSV HEADER;
                $$, 
                p_path
            );
    
       WITH dataset_insert AS (
                INSERT INTO fraps.dataset (filepath)
                VALUES (p_path)
                ON CONFLICT DO NOTHING
                RETURNING id           
            )
     INSERT INTO fraps.frametimes
     SELECT dsi.id
          , frame
          , ms
       FROM dataset_insert dsi
          , pg_temp._import_frametimes
      WHERE dsi.id IS NOT NULL
      ORDER BY dsi.id
          , frame
         ON CONFLICT DO NOTHING
     ;
    
END
$DEF$
LANGUAGE plpgsql
;

COMMENT ON FUNCTION fraps.import_frametimes IS 'Import *frametimes.csv generated by Fraps.';

-- Example usage:
-- SELECT fraps.import_frametimes('L:\data\fraps\fps\WolfNewOrder_x64 2017-03-19 10-07-16-62 frametimes.csv');

-- Remove data:
-- TRUNCATE fraps.frametimes;
-- DELETE FROM fraps.dataset;
